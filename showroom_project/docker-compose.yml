version: '3.8'
services:  
  backend:
    container_name: backend
    volumes:
      - ./:/showroom
      - static:/static
    build:
      context: ""
      dockerfile: Dockerfile
    command:  bash -c "python /showroom/manage.py migrate --no-input &&
              python manage.py collectstatic --no-input &&
              gunicorn showroom_project.wsgi:application --bind 0.0.0.0:8000"
              #python /showroom/manage.py  runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    env_file:
      - .env.dev
    depends_on:
      - db
      - rabbitmq
      - celery

  celery:
    container_name: celery
    build:
      context: ""
      dockerfile: CeleryDockerFile
    volumes:
      - ./:/showroom
    env_file:
      - .env.dev
    command: celery -A showroom_project worker --loglevel=info
    depends_on:
      - rabbitmq

  celery-beats:
    restart: always
    build:
      context: ""
      dockerfile: CeleryBeatDockerfile
    volumes:
      - ./:/showroom
    command: celery -A showroom_project beat -l info
    depends_on:
      - rabbitmq

  nginx:
    build: ./nginx
    volumes:
      - static:/static
    ports:
      - "80:80"
    depends_on:
      - backend


  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"

  db:
    restart: always
    image: postgres:14
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/ 
    env_file:
      - .env.dev
    ports:
      - "5432:5432"

volumes:
  postgres_data:
  static:
